s2 vtysh -c "conf t" -c "debug bgp updates" -c "log file /var/log/frr/bgpd.log" -c "router bgp 43617" -c "no bgp ebgp-requires-policy" -c "neighbor 7.0.0.3 remote-as 44566" -c "network 7.0.0.0" -c "network 2.0.0.0" -c "neighbor 7.0.0.3 soft-reconfiguration inbound"
s1 mkdir exabgp
s1 cd exabgp
s1 echo "process announce-routes{" >> conf.ini
s1 echo -e "\trun python exabgp/example.py;" >> conf.ini
s1 echo -e "\tencoder json;" >> conf.ini
s1 echo "}" >> conf.ini
s1 echo "neighbor 7.0.0.1{" >> conf.ini
s1 echo -e "\trouter-id 7.0.0.3;" >> conf.ini
s1 echo -e "\tlocal-address 7.0.0.3;" >> conf.ini
s1 echo -e "\tlocal-as 44566;" >> conf.ini
s1 echo -e "\tpeer-as 43617;" >> conf.ini
s1 echo -e "\tapi{" >> conf.ini
s1 echo -e "\t\tprocesses [announce-routes];" >> conf.ini
s1 echo -e "\t}" >> conf.ini
s1 echo -e "}" >> conf.ini
s1 echo "from __future__ import print_function" >> example.py
s1 echo "from sys import stdout" >> example.py
s1 echo "from time import sleep" >> example.py
s1 echo "messages = [" >> example.py
s1 echo -e "\t'announce route 100.10.3.4/24 next-hop self local-preference 133 as-path [43688] med 3 origin egp community [0:80]'," >> example.py
s1 echo "]" >> example.py
s1 echo "sleep(5)" >> example.py
s1 echo "for message in messages:" >> example.py
s1 printf "\tstdout.write(message + '\\\n')\n" >> example.py
s1 echo -e "\tstdout.flush()" >> example.py
s1 echo -e "\tsleep(1)" >> example.py
s1 echo "while True:" >> example.py
s1 echo -e "\tsleep(1)" >> example.py
s1 cd ..
py s1.cmd("exabgp exabgp/conf.ini &")
py time.sleep(10)

s2 vtysh -c "conf t" -c "bgp community-list 1 permit 0:80 0:90"

s2 vtysh -c "conf t" -c "route-map RMap deny 20" -c "match community 1"

s2 vtysh -c "conf t" -c "route-map RMap permit 30"

s2 vtysh -c "conf t" -c "router bgp 43617" -c "neighbor 7.0.0.3 route-map RMap in" -c "end" -c "exit"
s2 vtysh -c "clear ip bgp * soft"
py time.sleep(5)
s2 vtysh -c "show ip bgp"
s2 cat /var/log/frr/bgpd.log
